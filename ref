#!/usr/bin/python3
import shelve
import os
import sys
import random
from pathlib import Path
from helper_functions import (
    create_command_list,
    filter_dirs_with_period,
    copy_file,
    random_nums,
    create_directory_list,
    prepend_bullet_and_append_newline,
)


def main():
    shelf = shelve.open("save_file")
    if len(sys.argv) == 1:
        print(create_command_list())
        shelf.close()
        return
    home_dir = Path.home()
    command = sys.argv[1]
    if command == "reset" or command == "add":
        home_dir_list = filter_dirs_with_period(os.listdir(home_dir), home_dir)
        ref_photo_dir = None
        list_of_directories_in_home = create_directory_list(
            map(prepend_bullet_and_append_newline, home_dir_list)
        )
        ref_photo_dir = input(
            (
                f"{list_of_directories_in_home}\nPlease type in the directory "
                "name that contains the reference\n"
                "image files or create a new one: \n"
            )
        )
        shelf["ref_photo_dir"] = ref_photo_dir
        if not (ref_photo_dir) in home_dir_list:
            os.makedirs(f"{home_dir}/{ref_photo_dir}")
    # returns the current directory that holds the reference images
    if command == "current":
        print(f"Current Directory:  {shelf['ref_photo_dir']}")
    if command == "shuffle":
        image_list = []
        parent_dir = home_dir / shelf["ref_photo_dir"]
        current_list_of_dirs = filter_dirs_with_period(list(parent_dir.glob("*")))
        # check if the directory that holds the randomly picked images exits
        if not (parent_dir / "Ref_Inbox") in current_list_of_dirs:
            # create it if it does not
            os.makedirs(f"{parent_dir}/Ref_Inbox")
        else:
            # delete previous directory
            previous_ref_dir = parent_dir / "Ref_Inbox"
            previous_glob = list(previous_ref_dir.glob("*"))
            for image in previous_glob:
                os.unlink(image)
        for item in current_list_of_dirs:
            if (
                item.name == "Ref_Inbox"
                or len(filter_dirs_with_period(item.glob("*"))) == 0
                or item.suffix == "txt"
            ):
                continue
            item_list = filter_dirs_with_period(list(item.glob("*")))
            # figure out how to loop through a nested directory
            # maybe a while loop will help.
            if item_list[0].is_dir():
                continue
            # for sub_item in item_list:
            #     if sub_item.is_dir():
            #         sub_item_list = filter_dirs_with_period
            #         (list(sub_item.glob("*.jpg")))
            #         continue
            num_list = random_nums(5, len(item_list))
            for num in num_list:
                image_list.append(item_list[num])
        for i in range(int(sys.argv[2])):
            random_index = random.randrange(0, len(image_list))
            copy_file(image_list[random_index], parent_dir / "Ref_Inbox")
            print(image_list[random_index])

    shelf.close()


if __name__ == "__main__":
    main()
